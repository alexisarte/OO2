@startuml

title Facturaci√≥n de Llamadas - Class Diagram

class Persoonal {
  -guiaTelefonica: String[*]

  +agregarTelefono(str: String): Boolean
  +registrarPersonaFisica(nYA: String, tel: String, dni: Integer): PersonaFisica
  +registrarPersonaJuridica(nYA: String, tel: String, cuit: String): PersonaJuridica
  +eliminarUsuario(p: Persoona): Boolean
  +registrarLlamadaNacional(telEmisor: String, telRemitente: String, duracion: Integer): LlamadaNacional
  +registrarLlamadaInternacional(telEmisor: String, telRemitente: String, duracion: Integer): LlamadaInternacional
  +cantidadDeUsuarios(): Integer
  +existeUsuario(p: Persoona): Boolean
}

abstract class Persona {    
  -nombreYApellido: String
  -telefono: String

  +<<create>> Persona(nYA: String, tel: String): Persona
  +calcularMontoTotalLlamadas(): Real
  +agregarLlamada(llamada: Llamada): Boolean
  +{abstract} getDescuento(): Real
}

class PersonaFisica extends Persona {
  -dni: String
  -descuentoFis: Real

  +<<create>> PersonaFisica(nYA: String, tel: String, dni: String): PersonaFisica
  +getDescuento(): Real
}

class PersonaJuridica extends Persona {
  -cuit: String
  -descuentoJur: Real

  +<<create>> PersonaJuridica(nYA: String, tel: String, cuit: String): PersonaJuridica
  +getDescuento(): Real
}

abstract Llamada {
  -telEmisor: String 
  -telRemitente: String
  #duracion: Integer 
  #impuestoComun: Real
  +<<create>> Llamada(telEmisor: String, telRemitente: String, duracion: Integer): Llamada
  +{abstract} costo(): Real
}

class LlamadaNacional extends Llamada {
  +<<create>> LlamadaNacional(telEmisor: String, telRemitente: String, duracion: Integer): LlamadaNacional
  #impuestoNacional: Integer
  +costo(): Real
}

class LlamadaInternacional extends Llamada {
  +<<create>> LlamadaInternacional(telEmisor: String, telRemitente: String, duracion: Integer): LlamadaInternacional
  #impuestoInternacional: Integer
  +costo(): Real
}

Persoonal --> "0..*" Persona: personas
Persona --> "0..*" Llamada: llamadas

@enduml